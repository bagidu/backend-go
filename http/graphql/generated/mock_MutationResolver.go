// Code generated by mockery v2.3.0. DO NOT EDIT.

package generated

import (
	context "context"

	models "github.com/bagiduid/backend/models"
	mock "github.com/stretchr/testify/mock"
)

// MockMutationResolver is an autogenerated mock type for the MutationResolver type
type MockMutationResolver struct {
	mock.Mock
}

// Register provides a mock function with given fields: ctx, input
func (_m *MockMutationResolver) Register(ctx context.Context, input models.RegisterUser) (*models.User, error) {
	ret := _m.Called(ctx, input)

	var r0 *models.User
	if rf, ok := ret.Get(0).(func(context.Context, models.RegisterUser) *models.User); ok {
		r0 = rf(ctx, input)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.User)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, models.RegisterUser) error); ok {
		r1 = rf(ctx, input)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
